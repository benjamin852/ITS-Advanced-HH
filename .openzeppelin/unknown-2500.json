{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x25Af58E74454CE13E4AE40961BEAAe0116C965d5",
      "txHash": "0xee66ec401b2eadb6fa3b3355996ba597cdbd2e61a31ea08728978a09f70e6af8",
      "kind": "transparent"
    },
    {
      "address": "0x9260ADd57AbEaF5CA00b90bAb998Cc039A9bB6ba",
      "txHash": "0xba556e8424eba71ac41cc9a211f4517078dcf7271c6f9289cf0b25d587396215",
      "kind": "transparent"
    },
    {
      "address": "0xF08626a04DA14994339c647d024CE4A689646301",
      "txHash": "0x9f736cdbfec0d7711513e8dc5773d594691edfc4d457163dd4f54c31e0bcbc24",
      "kind": "transparent"
    },
    {
      "address": "0xb217333C010d129C9d9cdd4F7F951D82c51a53E7",
      "txHash": "0xebc44910ae5a257b48935ab699588a2bef02033454d45e0ab0486743f541e9aa",
      "kind": "transparent"
    }
  ],
  "impls": {
    "a600614303322f51fba0113d96eff7916f77f8c027d7f6db053d53ab9263eae5": {
      "address": "0x1c1997141DDe0d9A9f46e722071F46b2c3e16466",
      "txHash": "0x97c9d0b01572a3ac60a9f99add9618f82cdd7d371ce04a800d3cc5ecc6ef79e2",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_minterAddresses",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "AccessControl",
            "src": "contracts/AccessControl.sol:13"
          },
          {
            "label": "_blacklistedAddresses",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "AccessControl",
            "src": "contracts/AccessControl.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)747_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)757_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)747_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)817_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)747_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)747_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "4bc239dfe11839020fc09cdde4a8e7caaa42dc338b85221adc700116314a41a9": {
      "address": "0xB28494C68c38D83F91b973200CE108020810c2Dc",
      "txHash": "0x2439db86f2b2c7321de4636ffe9cc70818c9bc6c3a3e2db65a95f8a74ee4a9a4",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "s_accessControl",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(AccessControl)7940",
            "contract": "NativeTokenV1",
            "src": "contracts/NativeTokenV1.sol:31"
          },
          {
            "label": "s_its",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IInterchainTokenService)2084",
            "contract": "NativeTokenV1",
            "src": "contracts/NativeTokenV1.sol:32"
          },
          {
            "label": "s_tokenId",
            "offset": 0,
            "slot": "2",
            "type": "t_bytes32",
            "contract": "NativeTokenV1",
            "src": "contracts/NativeTokenV1.sol:33"
          },
          {
            "label": "s_burnRate",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "NativeTokenV1",
            "src": "contracts/NativeTokenV1.sol:35"
          },
          {
            "label": "s_txFeeRate",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "NativeTokenV1",
            "src": "contracts/NativeTokenV1.sol:36"
          },
          {
            "label": "s_rewardPool",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "NativeTokenV1",
            "src": "contracts/NativeTokenV1.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)1208_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC20Storage)898_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)817_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(NoncesStorage)1094_storage": {
            "label": "struct NoncesUpgradeable.NoncesStorage",
            "members": [
              {
                "label": "_nonces",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)1131_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(AccessControl)7940": {
            "label": "contract AccessControl",
            "numberOfBytes": "20"
          },
          "t_contract(IInterchainTokenService)2084": {
            "label": "contract IInterchainTokenService",
            "numberOfBytes": "20"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Nonces": [
            {
              "contract": "NoncesUpgradeable",
              "label": "_nonces",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol:17",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
